.modalBody {
  padding: 0;
  height: var(--modalMaxHeight);
}
.flexBody {
  display: flex;
  width: 100%;
  height: 100%;
}
.graphList {
  width: 25%;
  overflow: hidden;
  height: 100%;
  position: relative;
  :global {
    .ant-btn {
      margin-top: 7px;
      border-radius: 0;
      width: 100%;
    }
  }
}
.listWrapper {
  height: calc(100% - 50px);
  overflow-y: auto;
  overflow-x: hidden;
  &:after {
    content: ' ';
    width: 1px;
    display: block;
    position: absolute;
    right: 0;
    height: 100%;
    background: #e8e8e8;
  }
}
.graphItem {
  padding: 5px 5px 5px 10px;
  user-select: none;
  cursor: pointer;
  background: #f5f5f5;
  color: #585858;
  border-right: 1px solid #e8e8e8;
  border-bottom: 1px solid #e8e8e8;
  transition: all 0.3s;
  &:hover {
    background: #f9f9f9;
  }
  &:global(.active) {
    color: #000000;
    font-weight: bold;
    background: #fff;
    border-right-color: #fff;
    padding-left: 15px;
  }
}
.graphContent {
  flex: 1;
  width: 75%;
  height: 100%;
  position: relative;
  overflow: hidden;
}
.graphDes {
  position: absolute;
  right: 0;
  padding: 2px 5px;
  font-size: 13px;
  width: 23px;
  text-align: center;
  background: #085194;
  color: #fff;
  user-select: none;
}
.graphWrapper {
  :global {
    svg {
      width: 100%;
      height: 100%;
    }
    .nodebox text {
      pointer-events: none;
      -webkit-touch-callout: none;
      -webkit-user-select: none;
      -khtml-user-select: none;
      -moz-user-select: none;
      -ms-user-select: none;
      user-select: none;
    }
    .nodebox image {
      pointer-events: none;
    }
    .nodebox > .border:hover {
      fill-opacity: 0.7;
    }
    .nodebox > .flowborder:hover {
      stroke-opacity: 0.7;
    }
    /* Nodes */
    .node:hover {
      cursor: pointer;
    }
    .node.selected > .nodebox .border {
      stroke-width: 3;
      stroke: #39b3d7;
    }
    .node.selected > .nodebox .flowborder {
      stroke-width: 3;
      fill: #d9edff;
    }
    .border {
      stroke-width: 1;
    }
    .flownode .nodebox .flowborder {
      stroke-width: 1.25;
      fill: #fff;
      fill-opacity: 0.8;
    }
    .READY > g > rect {
      fill: #ddd;
      stroke: #ccc;
    }
    .READY > g > text {
      fill: #000;
    }
    .RUNNING > g > rect {
      fill: #39b3d7;
      stroke: #3997bd;
    }
    .RUNNING > g > text {
      fill: #fff;
    }
    .SUCCEEDED > g > rect {
      fill: #5cb85c;
      stroke: #60a060;
    }
    .SUCCEEDED > g > text {
      fill: #fff;
    }
    .FAILED > g > rect {
      fill: #d2322d;
      stroke: #b43128;
    }
    .FAILED > g > text {
      fill: #fff;
    }
    .KILLED > g > rect {
      fill: #d2322d;
      stroke: #b43128;
    }
    .KILLED > g > text {
      fill: #fff;
    }
    .KILLING > g > rect {
      fill: #ff9999;
      stroke: #d78484;
    }
    .KILLING > g > text {
      fill: #fff;
    }
    .CANCELLED > g > rect {
      fill: #ff9999;
      stroke: #d78484;
    }
    .CANCELLED > g > text {
      fill: #fff;
    }
    .FAILED_SUCCEEDED > g > rect {
      fill: #ff9999;
      stroke: #d78484;
    }
    .FAILED_SUCCEEDED > g > text {
      fill: #fff;
    }
    .FAILED_FINISHING > g > rect {
      fill: #ed9c28;
      stroke: #d78484;
    }
    .FAILED_FINISHING > g > text {
      fill: #fff;
    }
    .DISABLED > g > rect {
      fill: #ddd;
      stroke: #ccc;
    }
    .DISABLED > g > rect {
      fill: #ddd;
      stroke: #ccc;
    }
    .nodeDisabled {
      opacity: 0.25;
    }
    .SKIPPED > g > rect {
      fill: #ddd;
      stroke: #ccc;
    }
    .DISABLED {
      opacity: 0.25;
    }
    .SKIPPED {
      opacity: 0.25;
    }
    .QUEUED > g > rect {
      fill: #39b3d7;
      stroke: #3997bd;
    }
    .QUEUED > g > text {
      fill: #fff;
    }
    .QUEUED {
      opacity: 0.5;
    }
    /* Edges */
    .edge {
      stroke: #ccc;
      stroke-width: 1.5;
    }
    .edge:hover {
      stroke: #009fc9;
      stroke-width: 1.5;
    }
  }
}
